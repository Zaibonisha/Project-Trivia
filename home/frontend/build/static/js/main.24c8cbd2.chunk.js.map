{"version":3,"sources":["components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","index.js"],"names":["FormView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","setState","defineProperty","target","name","value","categories","_this2","_this3","react_default","a","createElement","id","className","onSubmit","onChange","keys","map","key","Component","Question","visibleAnswer","_this$props","alt","concat","toLowerCase","src","onClick","questionAction","flipVisibility","style","visibility","Search","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","questions","totalQuestions","total_questions","currentCategory","current_category","getByCategory","searchTerm","action","window","confirm","num","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","components_Search","q","ind","components_Question","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","replace","split","every","el","includes","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","components_Header","path","react_router_dom","react_router","exact","component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.24c8cbd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      question: '',\n      answer: '',\n      difficulty: 1,\n      category: 1,\n      categories: {},\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `http://localhost:5432/categories`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({ categories: result.categories });\n        return; \n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      },\n    });\n  }\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: 'http://localhost:5432/questions', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category,\n      }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById('add-question-form').reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    return (\n      <div id='add-form'>\n        <h2>Add a New Trivia Question</h2>\n        <form\n          className='form-view'\n          id='add-question-form'\n          onSubmit={this.submitQuestion}\n        >\n          <label>\n            Question\n            <input type='text' name='question' onChange={this.handleChange} />\n          </label>\n          <label>\n            Answer\n            <input type='text' name='answer' onChange={this.handleChange} />\n          </label>\n          <label>\n            Difficulty\n            <select name='difficulty' onChange={this.handleChange}>\n              <option value='1'>1</option>\n              <option value='2'>2</option>\n              <option value='3'>3</option>\n              <option value='4'>4</option>\n              <option value='5'>5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name='category' onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map((id) => {\n                return (\n                  <option key={id} value={id}>\n                    {this.state.categories[id]}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n          <input type='submit' className='button' value='Submit' />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n","import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      visibleAnswer: false,\n    };\n  }\n\n  flipVisibility() {\n    this.setState({ visibleAnswer: !this.state.visibleAnswer });\n  }\n\n  render() {\n    const { question, answer, category, difficulty } = this.props;\n    return (\n      <div className='Question-holder'>\n        <div className='Question'>{question}</div>\n        <div className='Question-status'>\n          <img\n            className='category'\n            alt={`${category.toLowerCase()}`}\n            src={`${category.toLowerCase()}.svg`}\n          />\n          <div className='difficulty'>Difficulty: {difficulty}</div>\n          <img\n            src='delete.png'\n            alt='delete'\n            className='delete'\n            onClick={() => this.props.questionAction('DELETE')}\n          />\n        </div>\n        <div\n          className='show-answer button'\n          onClick={() => this.flipVisibility()}\n        >\n          {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n        </div>\n        <div className='answer-holder'>\n          <span\n            style={{\n              visibility: this.state.visibleAnswer ? 'visible' : 'hidden',\n            }}\n          >\n            Answer: {answer}\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React, { Component } from 'react';\n\nclass Search extends Component {\n  state = {\n    query: '',\n  };\n\n  getInfo = (event) => {\n    event.preventDefault();\n    this.props.submitSearch(this.state.query);\n  };\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value,\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.getInfo}>\n        <input\n          placeholder='Search questions...'\n          ref={(input) => (this.search = input)}\n          onChange={this.handleInputChange}\n        />\n        <input type='submit' value='Submit' className='button' />\n      </form>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `http://localhost:5432/questions?page=${this.state.page}`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category,\n        });\n        return;     \n               \n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  selectPage(num) {\n    this.setState({ page: num }, () => this.getQuestions());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10);\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {\n            this.selectPage(i);\n          }}\n        >\n          {i}\n        </span>\n      );\n    }\n    return pageNumbers;\n  }\n\n  getByCategory = (id) => {\n    $.ajax({\n      url: `http://localhost:5432/categories/${id}/questions`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: 'http://localhost:5432/questions', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({ searchTerm: searchTerm }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  questionAction = (id) => (action) => {\n    if (action === 'DELETE') {\n      if (window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `/localhost:5432/questions/${id}`, //TODO: update request URL\n          type: 'DELETE',\n          success: (result) => {\n            this.getQuestions();\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again');\n            return;\n          },\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className='question-view'>\n        <div className='categories-list'>\n          <h2\n            onClick={() => {\n              this.getQuestions();\n            }}\n          >\n            Categories\n          </h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id) => (\n              <li\n                key={id}\n                onClick={() => {\n                  this.getByCategory(id);\n                }}\n              >\n                {this.state.categories[id]}\n                <img\n                  className='category'\n                  alt={`${this.state.categories[id].toLowerCase()}`}\n                  src={`${this.state.categories[id].toLowerCase()}.svg`}\n                />\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch} />\n        </div>\n        <div className='questions-list'>\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className='pagination-menu'>{this.createPagination()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n","import React, { Component } from 'react';\nimport '../stylesheets/Header.css';\n\nclass Header extends Component {\n  navTo(uri) {\n    window.location.href = window.location.origin + uri;\n  }\n\n  render() {\n    return (\n      <div className='App-header'>\n        <h1\n          onClick={() => {\n            this.navTo('');\n          }}\n        >\n          Udacitrivia\n        </h1>\n        <h2\n          onClick={() => {\n            this.navTo('');\n          }}\n        >\n          List\n        </h2>\n        <h2\n          onClick={() => {\n            this.navTo('/add');\n          }}\n        >\n          Add\n        </h2>\n        <h2\n          onClick={() => {\n            this.navTo('/play');\n          }}\n        >\n          Play\n        </h2>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/QuizView.css';\n\nconst questionsPerPlay = 5;\n\nclass QuizView extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      categories: {},\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false,\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `http://localhost:5432/categories`, //TODO: update request URL\n      type: 'GET',\n      success: (result) => {\n        this.setState({ categories: result.categories });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again');\n        return;\n      },\n    });\n  }\n\n  selectCategory = ({ type, id = 0 }) => {\n    this.setState({ quizCategory: { type, id } }, this.getNextQuestion);\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  getNextQuestion = () => {\n    const previousQuestions = [...this.state.previousQuestions];\n    if (this.state.currentQuestion.id) {\n      previousQuestions.push(this.state.currentQuestion.id);\n    }\n\n    $.ajax({\n      url: 'http://localhost:5432/quizzes', //TODO: update request URL\n      type: 'POST',\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        previous_questions: previousQuestions,\n        quiz_category: this.state.quizCategory,\n      }),\n      xhrFields: {\n        withCredentials: true,\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          showAnswer: false,\n          previousQuestions: previousQuestions,\n          currentQuestion: result.question,\n          guess: '',\n          forceEnd: result.question ? false : true,\n        });\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load question. Please try your request again');\n        return;\n      },\n    });\n  };\n\n  submitGuess = (event) => {\n    event.preventDefault();\n    let evaluate = this.evaluateAnswer();\n    this.setState({\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\n      showAnswer: true,\n    });\n  };\n\n  restartGame = () => {\n    this.setState({\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false,\n    });\n  };\n\n  renderPrePlay() {\n    return (\n      <div className='quiz-play-holder'>\n        <div className='choose-header'>Choose Category</div>\n        <div className='category-holder'>\n          <div className='play-category' onClick={this.selectCategory}>\n            ALL\n          </div>\n          {Object.keys(this.state.categories).map((id) => {\n            return (\n              <div\n                key={id}\n                value={id}\n                className='play-category'\n                onClick={() =>\n                  this.selectCategory({ type: this.state.categories[id], id })\n                }\n              >\n                {this.state.categories[id]}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n\n  renderFinalScore() {\n    return (\n      <div className='quiz-play-holder'>\n        <div className='final-header'>\n          Your Final Score is {this.state.numCorrect}\n        </div>\n        <div className='play-again button' onClick={this.restartGame}>\n          Play Again?\n        </div>\n      </div>\n    );\n  }\n\n  evaluateAnswer = () => {\n    const formatGuess = this.state.guess\n      // eslint-disable-next-line\n      .replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '')\n      .toLowerCase();\n    const answerArray = this.state.currentQuestion.answer\n      .toLowerCase()\n      .split(' ');\n    return answerArray.every((el) => formatGuess.includes(el));\n  };\n\n  renderCorrectAnswer() {\n    let evaluate = this.evaluateAnswer();\n    return (\n      <div className='quiz-play-holder'>\n        <div className='quiz-question'>\n          {this.state.currentQuestion.question}\n        </div>\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>\n          {evaluate ? 'You were correct!' : 'You were incorrect'}\n        </div>\n        <div className='quiz-answer'>{this.state.currentQuestion.answer}</div>\n        <div className='next-question button' onClick={this.getNextQuestion}>\n          {' '}\n          Next Question{' '}\n        </div>\n      </div>\n    );\n  }\n\n  renderPlay() {\n    return this.state.previousQuestions.length === questionsPerPlay ||\n      this.state.forceEnd ? (\n      this.renderFinalScore()\n    ) : this.state.showAnswer ? (\n      this.renderCorrectAnswer()\n    ) : (\n      <div className='quiz-play-holder'>\n        <div className='quiz-question'>\n          {this.state.currentQuestion.question}\n        </div>\n        <form onSubmit={this.submitGuess}>\n          <input type='text' name='guess' onChange={this.handleChange} />\n          <input\n            className='submit-guess button'\n            type='submit'\n            value='Submit Answer'\n          />\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    return this.state.quizCategory ? this.renderPlay() : this.renderPrePlay();\n  }\n}\n\nexport default QuizView;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './stylesheets/App.css';\nimport FormView from './components/FormView';\nimport QuestionView from './components/QuestionView';\nimport Header from './components/Header';\nimport QuizView from './components/QuizView';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Header path />\n        <Router>\n          <Switch>\n            <Route path='/' exact component={QuestionView} />\n            <Route path='/add' component={FormView} />\n            <Route path='/play' component={QuizView} />\n            <Route component={QuestionView} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}